import{F as m,J as h,M as i,Ua as S,Ya as p,c as u,h as a,i as o,k as l,p as g}from"./chunk-4K6JBKNM.js";var I=(()=>{class s{constructor(t,r){this.supabase=t,this.router=r,this.currentUserSubject=new u(null),this.currentUser$=this.currentUserSubject.asObservable(),this.checkCustomSession()}checkCustomSession(){let t=localStorage.getItem("currentUser");if(t)try{let r=JSON.parse(t);this.currentUserSubject.next(r)}catch(r){console.error("Error parsing stored user:",r),localStorage.removeItem("currentUser")}}signIn(t,r){return console.log("Starting signIn with:",{email:t,password:r}),a(this.supabase.client.from("login_table").select("*").eq("user_name",t).eq("password",r).limit(1)).pipe(l(({data:e,error:n})=>{if(console.log("Raw Supabase response:",{data:e,error:n,count:e?.length}),console.log("Query details:",{table:"login_table",filters:{user_name:t,password:r}}),n)return console.error("Supabase query error:",n),{user:null,error:n};if(console.log("Query successful - data:",e),console.log("Data length:",e?.length||0),e==null||e.length===0)return console.log("No matching user found - checking if table has any data..."),{user:null,error:{message:"username or password is invalid"}};let c=e[0];return{user:{id:c.id.toString(),email:c.user_name,user_metadata:{},app_metadata:{},aud:"authenticated",created_at:new Date().toISOString(),updated_at:new Date().toISOString(),role:"authenticated"},error:null}}),m(({user:e})=>{e&&(this.currentUserSubject.next(e),localStorage.setItem("currentUser",JSON.stringify(e)))}),g(e=>(console.error("Sign in error:",e),o({user:null,error:{message:"Login failed. Please check your credentials."}}))))}signOut(){return localStorage.removeItem("currentUser"),this.currentUserSubject.next(null),this.router.navigate(["/login"]),o({error:null})}get isAuthenticated(){return this.currentUserSubject.value!==null}get currentUser(){return this.currentUserSubject.value}static{this.\u0275fac=function(r){return new(r||s)(i(p),i(S))}}static{this.\u0275prov=h({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})();export{I as a};
